<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>py_requests简单爬取</title>
      <link href="/2018/03/18/py_requests%E7%AE%80%E5%8D%95%E7%88%AC%E5%8F%96/"/>
      <content type="html"><![CDATA[<p>学习使用requests模块爬取简单网页</p><h2 id="首先安装requests模块"><a href="#首先安装requests模块" class="headerlink" title="首先安装requests模块"></a>首先安装requests模块</h2><pre><code>pip install requests</code></pre><h2 id="初步建立"><a href="#初步建立" class="headerlink" title="初步建立"></a>初步建立</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = input(&quot;请输入地址：&quot;)</span><br><span class="line">r = requests.get(url)</span><br><span class="line">requests.encoding=&apos;utf-8&apos;</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>效果还行</p>]]></content>
      
      
        <tags>
            
            <tag> py </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>c_定积分</title>
      <link href="/2018/03/17/c_%E5%AE%9A%E7%A7%AF%E5%88%86/"/>
      <content type="html"><![CDATA[<h2 id="求定积分近似值"><a href="#求定积分近似值" class="headerlink" title="求定积分近似值"></a>求定积分近似值</h2><h3 id="初步建立"><a href="#初步建立" class="headerlink" title="初步建立"></a>初步建立</h3><pre><code>#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;    double fx(double x=0)    //定义被积函数{    double s;     s=pow(2,x);    //在此修改函数    return s;double gx(double a=0,double b=0,int n=1)    //定义简单积分，先默认a&lt;=b{    int i=1;double l=(b-a)/n;double s=0;    for(i;i&lt;=n;i++)        s+=fx(a+i*l);    return s;}    int main()    //加入防错系统{    double a=0;double b=0;int n=1;    cout&lt;&lt;&quot;请输入积分下限，上限，分割份数:&quot;;    cin&gt;&gt;a&gt;&gt;b&gt;&gt;n;    if(a&lt;=b)        cout&lt;&lt;&quot;所求积分为:&quot;&lt;&lt;gx(a,b,n)&lt;&lt;endl;    else        cout&lt;&lt;&quot;所求积分为:&quot;&lt;&lt;-gx(b,a,n)&lt;&lt;endl;    return 0;}</code></pre><p>由于使用过剩近似值代替，误差较大，应做出改进</p><h3 id="改进近似值"><a href="#改进近似值" class="headerlink" title="改进近似值"></a>改进近似值</h3><pre><code>#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;    double fx(double x=0)    //定义被积函数{    double s;     s=pow(2,x);    //在此修改函数    return s;}    double gx(double a=0,double b=0,int n=1)    //定义简单积分，先默认a&lt;=b,过剩{    int i=1;double l=(b-a)/n;double s=0;    for(i;i&lt;=n;i++)        s+=fx(a+i*l);    s*=l;    return s;}    double hx(double a=0,double b=0,int n=1)    //定义简单积分，先默认a&lt;=b，不足{    int i=0;double l=(b-a)/n;double s=0;    for(i;i&lt;n;i++)        s+=fx(a+i*l);    s*=l;    return s;}    int main()    //加入防错系统{    double a=0;double b=0;int n=1;    cout&lt;&lt;&quot;请输入积分下限，上限，分割份数:&quot;;    cin&gt;&gt;a&gt;&gt;b&gt;&gt;n;    if(a&lt;=b)        cout&lt;&lt;&quot;所求积分在  &quot;&lt;&lt;hx(a,b,n)&lt;&lt;&quot;到  &quot;&lt;&lt;gx(a,b,n)&lt;&lt;&quot;之间,平均值为  &quot;&lt;&lt;(hx(a,b,n)+gx(a,b,n))/2&lt;&lt;endl;    else        cout&lt;&lt;&quot;所求积分在  &quot;&lt;&lt;-hx(b,a,n)&lt;&lt;&quot;到  &quot;&lt;&lt;-gx(b,a,n)&lt;&lt;&quot;之间,平均值为  &quot;&lt;&lt;-(hx(b,a,n)+gx(b,a,n))/2&lt;&lt;endl;    return 0;}</code></pre><p>尚不能比较两近似值大小</p><h3 id="改进：比较近似值大小"><a href="#改进：比较近似值大小" class="headerlink" title="改进：比较近似值大小"></a>改进：比较近似值大小</h3><pre><code>#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;    double fx(double x=0)    //定义被积函数{    double s;     s=pow(2,x);    //在此修改函数    return s;}    double gx(double a=0,double b=0,int n=1)    //定义简单积分，先默认a&lt;=b,过剩{    int i=1;double l=(b-a)/n;double s=0;    for(i;i&lt;=n;i++)        s+=fx(a+i*l);    s*=l;    return s;}    double hx(double a=0,double b=0,int n=1)    //定义简单积分，先默认a&lt;=b，不足{    int i=0;double l=(b-a)/n;double s=0;    for(i;i&lt;n;i++)        s+=fx(a+i*l);    s*=l;    return s;}    int main()    //加入防错系统{    double a=0;double b=0;int n=1;    cout&lt;&lt;&quot;请输入积分下限，上限，分割份数:&quot;;    cin&gt;&gt;a&gt;&gt;b&gt;&gt;n;    if(a&lt;=b)    {        if(hx(a,b,n)&lt;gx(a,b,n))            cout&lt;&lt;&quot;所求积分在  &quot;&lt;&lt;hx(a,b,n)&lt;&lt;&quot;到  &quot;&lt;&lt;gx(a,b,n)&lt;&lt;&quot;之间,平均值为  &quot;&lt;&lt;(hx(a,b,n)+gx(a,b,n))/2&lt;&lt;endl;        else            cout&lt;&lt;&quot;所求积分在  &quot;&lt;&lt;gx(a,b,n)&lt;&lt;&quot;到  &quot;&lt;&lt;hx(a,b,n)&lt;&lt;&quot;之间,平均值为  &quot;&lt;&lt;(hx(a,b,n)+gx(a,b,n))/2&lt;&lt;endl;    }    else    {        if(hx(b,a,n)&gt;gx(b,a,n))            cout&lt;&lt;&quot;所求积分在  &quot;&lt;&lt;-hx(b,a,n)&lt;&lt;&quot;到  &quot;&lt;&lt;-gx(b,a,n)&lt;&lt;&quot;之间,平均值为  &quot;&lt;&lt;-(hx(b,a,n)+gx(b,a,n))/2&lt;&lt;endl;        else            cout&lt;&lt;&quot;所求积分在  &quot;&lt;&lt;-gx(b,a,n)&lt;&lt;&quot;到  &quot;&lt;&lt;-hx(b,a,n)&lt;&lt;&quot;之间,平均值为  &quot;&lt;&lt;-(hx(b,a,n)+gx(b,a,n))/2&lt;&lt;endl;    }    return 0;}</code></pre><p>尚不能修改被积函数<br>    未完</p>]]></content>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
